on: [pull_request]

name: Gas Benchmark

jobs:
  compile-old-contracts:
    name: Compile old contracts using optimized rust compiler
    runs-on: ubuntu-latest
    container:
      image: cosmwasm/workspace-optimizer:0.12.6
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.base.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}

      - name: Rust Dependencies Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Optimize
        run: optimize_workspace.sh
      - name: Upload contracts
        uses: actions/upload-artifact@v3
        with:
          name: dao-dao-contract-old-artifacts-${{ github.event.number }}
          path: artifacts
          retention-days: 1

  compile-contracts:
    name: Compile contracts using optimized rust compiler
    runs-on: ubuntu-latest
    container:
      image: cosmwasm/workspace-optimizer:0.12.6
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
      - name: Optimize
        run: optimize_workspace.sh
      - name: Upload contracts
        uses: actions/upload-artifact@v3
        with:
          name: dao-dao-contract-artifacts-${{ github.event.number }}
          path: artifacts
          retention-days: 1

  build-gas:
    name: Build Gas Benchmarker
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
      - name: Create binary
        uses: actions-rs/cargo@v1
        with:
          toolchain: nightly
          command: build
          args: --release --manifest-path=ci/gas_benchmarks/Cargo.toml
      - name: Upload gas binary
        uses: actions/upload-artifact@v3
        with:
          name: dao-dao-gas-bin-${{ github.event.number }}
          path: ci/gas_benchmarks/target/release/gas-benchmarks
          retention-days: 1

  calc-gas:
    name: Calculate gas costs in local juno
    runs-on: ubuntu-latest
    needs: [compile-contracts, compile-old-contracts, build-gas]
    env:
      ADMIN_ADDR: juno10j9gpw9t4jsz47qgnkvl5n3zlm2fz72k67rxsg
      KEY_NAME: validator
      GAS_REPORT_OUT: ./gas_report.json
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      # TODO: This is dumb, but:
      # * We cant run this juno node as a `service` because services
      #   cant have custom entrypoint overrides
      # * We cant run this juno node as a container of the job, because juno image
      #   uses alpine which cant compile `cw-core-macros` for some fun reason
      - name: Run Local Juno Node
        run: |
          docker run --rm -d --name juno \
            -e PASSWORD=xxxxxxxxx \
            -e STAKE_TOKEN=ujunox \
            -e GAS_LIMIT=-1 \
            -e UNSAFE_CORS=true \
            -p 1317:1317 \
            -p 26656:26656 \
            -p 26657:26657 \
            ghcr.io/cosmoscontracts/juno:v8.0.0 /opt/setup_and_run.sh $ADMIN_ADDR

      # HACK: We should be polling until a certain height is reached
      # (it would be cool if cosm-orc could do this for us)
      - name: Let Juno catch up
        run: sleep 30

      - name: Restore gas binary
        uses: actions/download-artifact@v3
        with:
          name: dao-dao-gas-bin-${{ github.event.number }}
          path: ci/gas_benchmarks/

      - name: Restore optimized contracts
        uses: actions/download-artifact@v3
        with:
          name: dao-dao-contract-artifacts-${{ github.event.number }}
          path: ci/gas_benchmarks/artifacts

      - name: Restore old optimized contracts
        uses: actions/download-artifact@v3
        with:
          name: dao-dao-contract-old-artifacts-${{ github.event.number }}
          path: ci/gas_benchmarks/old-artifacts

      - name: Download smart contract dependencies
        run: |
          wget https://github.com/CosmWasm/cw-plus/releases/download/v0.11.1/cw20_base.wasm \
            -O ci/gas_benchmarks/artifacts/cw20_base.wasm
          wget https://github.com/CosmWasm/cw-plus/releases/download/v0.11.1/cw4_group.wasm \
            -O ci/gas_benchmarks/artifacts/cw4_group.wasm
          cp ci/gas_benchmarks/artifacts/cw20_base.wasm ci/gas_benchmarks/old-artifacts/cw20_base.wasm
          cp ci/gas_benchmarks/artifacts/cw4_group.wasm ci/gas_benchmarks/old-artifacts/cw4_group.wasm

      - name: Fix gas bin perms
        run: chmod +x ci/gas_benchmarks/gas-benchmarks

      - name: Install local junod
        run: |
          wget https://github.com/CosmosContracts/juno/releases/download/v8.0.0/junod -O junod
          chmod +x ./junod
          mv junod /usr/local/bin
      
      - name: Add Validator key
        run: |
          junod config keyring-backend test
          tail -n 1 default-account.txt | junod keys add $KEY_NAME --recover

      - name: Calculate gas costs
        run: cd ci/gas_benchmarks/ && RUST_LOG=DEBUG CONTRACT_DIR="artifacts" ./gas-benchmarks

      - name: Calculate old gas costs
        run: |
          cd ci/gas_benchmarks/ && RUST_LOG=DEBUG \
            CONTRACT_DIR="old-artifacts" \
            GAS_REPORT_OUT="./old_gas_report.json" \
            ./gas-benchmarks

      - name: Raw gas reports
        run: |
          cat ./ci/gas_benchmarks/gas_report.json
          cat ./ci/gas_benchmarks/old_gas_report.json

      - name: Post gas diff to PR
        uses: de-husk/cosm-orc-gas-diff-action@v0.5
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          current_json: "./ci/gas_benchmarks/gas_report.json"
          old_json: "./ci/gas_benchmarks/old_gas_report.json"